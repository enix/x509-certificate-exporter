name: Code

on:
  pull_request:
    paths-ignore:
      - deploy/**
      - "**/*.md"

permissions:
  contents: read
  pull-requests: read

jobs:
  static-analysis:
    name: Static Analysis
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Golang
        uses: actions/setup-go@v3
        with:
          go-version-file: go.mod
          check-latest: true

      - name: Restore cached Go modules
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          # TODO verify all options
          version: latest
          only-new-issues: true

  unit-testing:
    name: Unit Testing
    runs-on: ubuntu-latest
    steps:
      - name: Create KinD cluster
        uses: engineerd/setup-kind@v0.5.0
        with:
          version: v0.15.0

      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Golang
        uses: actions/setup-go@v3
        with:
          go-version-file: go.mod
          check-latest: true

      - name: Restore cached Go modules
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Run unit tests
        run: |
          kubectl cluster-info
          go test -v -failfast -timeout 1m -coverprofile=coverage.cov ./internal
          go tool cover -html=coverage.cov -o coverage.html

      - name: Archive code coverage results
        uses: actions/upload-artifact@v3
        with:
          name: code-coverage-report
          path: coverage.html
