{{- with .Values.hostPathsExporter.daemonSets }}
{{- range $dsName, $dsDef := . }}
{{- $extraVolumes := concat ( default $.Values.hostPathsExporter.extraVolumes $dsDef.extraVolumes ) $.Values.extraVolumes }}
{{- $extraVolumeMounts := concat ( default $.Values.hostPathsExporter.extraVolumeMounts $dsDef.extraVolumeMounts ) $.Values.extraVolumeMounts }}
{{- $extraEnvs := concat (default (list) $.Values.hostPathsExporter.env) (default (list) $dsDef.env) }}
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ printf "%s-%s" (include "x509-certificate-exporter.fullname" $) $dsName }}
  namespace: {{ include "x509-certificate-exporter.namespace" $ }}
  labels:
    {{- include "x509-certificate-exporter.labels" $ | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "x509-certificate-exporter.selectorLabels" $ | nindent 6 }}
  {{- with default $.Values.hostPathsExporter.updateStrategy $dsDef.updateStrategy }}
  updateStrategy:
    {{- . | toYaml | trim | nindent 4 }}
  {{- end }}
  template:
    metadata:
      labels:
        {{- include "x509-certificate-exporter.labels" $ | nindent 8 }}
        {{- with $.Values.podExtraLabels }}
        {{- . | toYaml | trim | nindent 8 }}
        {{- end }}
        {{- with default $.Values.hostPathsExporter.podExtraLabels $dsDef.podExtraLabels }}
        {{- . | toYaml | trim | nindent 8 }}
        {{- end }}
      {{- with mustMerge (default $.Values.hostPathsExporter.podAnnotations $dsDef.podAnnotations) $.Values.podAnnotations }}
      annotations:
        {{- toYaml . | trim | nindent 8 }}
      {{- end }}
    spec:
      serviceAccountName: {{ include "x509-certificate-exporter.hostPathsExporterServiceAccountName" $ }}
      {{- with $.Values.imagePullSecrets }}
      imagePullSecrets:
        {{- . | toYaml | trim | nindent 8 }}
      {{- end }}
      {{- with default $.Values.hostPathsExporter.affinity $dsDef.affinity }}
      affinity:
        {{- . | toYaml | trim | nindent 8 }}
      {{- end }}
      {{- with default $.Values.hostPathsExporter.tolerations $dsDef.tolerations }}
      tolerations:
      {{- . | toYaml | trim | nindent 6 }}
      {{- end }}
      {{- with default $.Values.hostPathsExporter.podSecurityContext $dsDef.podSecurityContext }}
      securityContext:
        {{- . | toYaml | trim | nindent 8 }}
      {{- end }}
      {{- with default $.Values.hostPathsExporter.nodeSelector $dsDef.nodeSelector }}
      nodeSelector:
        {{- . | toYaml | trim | nindent 8 }}
      {{- end }}
      restartPolicy: {{ default $.Values.hostPathsExporter.restartPolicy $dsDef.restartPolicy }}
      {{- with default $.Values.priorityClassName (default $.Values.hostPathsExporter.priorityClassName $dsDef.priorityClassName) }}
      priorityClassName: {{ . | quote }}
      {{- end }}
      containers:
      - name: {{ $.Chart.Name }}
        {{- with default $.Values.hostPathsExporter.securityContext $dsDef.securityContext }}
        securityContext:
          {{- . | toYaml | trim | nindent 10 }}
        {{- end }}
        {{- with default $.Values.hostPathsExporter.resources $dsDef.resources }}
        resources:
          {{- . | toYaml | trim | nindent 10 }}
        {{- end }}
        image: {{ include "x509-certificate-exporter.image" $ }}
        imagePullPolicy: {{ $.Values.image.pullPolicy }}
        {{- if $extraEnvs }}
        env:
        {{- toYaml $extraEnvs | trim | nindent 8 }}
        {{- end }}
        args:
        {{- with default $.Values.hostPathsExporter.debugMode $dsDef.debugMode }}
        - --debug
        {{- end }}
        {{- if $.Values.exposeRelativeMetrics }}
        - --expose-relative-metrics
        {{- end }}
        {{- if not $.Values.rbacProxy.enabled }}
        - --listen-address=:{{ $.Values.podListenPort }}
        {{- else }}
        - --listen-address=:{{ $.Values.rbacProxy.upstreamListenPort }}
        {{- end }}
        - --trim-path-components=3
        {{- range default $.Values.hostPathsExporter.watchDirectories $dsDef.watchDirectories }}
        - --watch-dir=/mnt/watch/dir-{{ . | clean | sha1sum }}/{{ . | clean }}
        {{- end }}
        {{- range default $.Values.hostPathsExporter.watchFiles $dsDef.watchFiles }}
        - --watch-file=/mnt/watch/file-{{ . | clean | sha1sum }}/{{ . | clean }}
        {{- end }}
        {{- range default $.Values.hostPathsExporter.watchKubeconfFiles $dsDef.watchKubeconfFiles }}
        - --watch-kubeconf=/mnt/watch/kube-{{ . | clean | sha1sum }}/{{ . | clean }}
        {{- end }}
        {{- if not (kindIs "invalid" $.Values.metricLabelsFilterList) }}
        - --expose-labels={{ $.Values.metricLabelsFilterList | join "," }}
        {{- end }}
        {{- if $.Values.secretsExporter.cache.enabled }}
        - --max-cache-duration={{ $.Values.secretsExporter.cache.maxDuration | int }}s
        {{- else }}
        - --max-cache-duration=0
        {{- end }}
        {{- if $.Values.exposePerCertificateErrorMetrics }}
        - --expose-per-cert-error-metrics
        {{- end }}
        {{- if or $.Values.webConfiguration $.Values.webConfigurationExistingSecret }}
        - --web.config.file=/mnt/webconfig.yaml
        {{- end }}
        volumeMounts:
        {{- range default $.Values.hostPathsExporter.watchDirectories $dsDef.watchDirectories }}
        - name: dir-{{ . | clean | sha1sum }}
          mountPath: /mnt/watch/dir-{{ . | clean | sha1sum }}/{{ . | clean }}
          readOnly: true
        {{- end }}
        {{- range default $.Values.hostPathsExporter.watchFiles $dsDef.watchFiles }}
        - name: file-{{ . | clean | sha1sum }}
          mountPath: /mnt/watch/file-{{ . | clean | sha1sum }}/{{ . | clean | dir }}
          readOnly: true
        {{- end }}
        {{- range default $.Values.hostPathsExporter.watchKubeconfFiles $dsDef.watchKubeconfFiles }}
        - name: kube-{{ . | clean | sha1sum }}
          mountPath: /mnt/watch/kube-{{ . | clean | sha1sum }}/{{ . | clean | dir }}
          readOnly: true
        {{- end }}
        {{- if or $.Values.webConfiguration $.Values.webConfigurationExistingSecret }}
        - name: web-configuration
          mountPath: /mnt/
          readOnly: true
        {{- end }}
        {{- range $extraVolumeMounts }}
        - {{ tpl (. | toYaml) $ | indent 10 | trim }}
        {{- end }}
      {{- if not $.Values.rbacProxy.enabled }}
        ports:
        - name: metrics
          containerPort: {{ $.Values.podListenPort }}
      {{- else }}
      - name: kube-rbac-proxy
        {{- with $.Values.rbacProxy.securityContext }}
        securityContext:
          {{- toYaml . | trim | nindent 10 }}
        {{- end }}
        image: {{ include "x509-certificate-exporter.rbacProxy.image" $ }}
        imagePullPolicy: {{ $.Values.rbacProxy.imagePullPolicy }}
        args:
        - --logtostderr
        - -v=99
        - --upstream=http://[127.0.0.1]:{{ $.Values.rbacProxy.upstreamListenPort }}
        - --secure-listen-address=[$(IP)]:{{ $.Values.podListenPort }}
        env:
        - name: IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        ports:
        - name: metrics
          containerPort: {{ $.Values.podListenPort }}
        {{- with $.Values.rbacProxy.resources }}
        resources:
        {{- . | toYaml | trim | nindent 10 }}
        {{- end }}
      {{- end }}
      hostNetwork: {{ $.Values.hostNetwork }}
      volumes:
      {{- $hostPathType := $.Values.hostPathsExporter.hostPathVolumeType }}
      {{- if hasKey $dsDef "hostPathVolumeType" }}
        {{- $hostPathType = $dsDef.hostPathVolumeType }}
      {{- end }}
      {{- range default $.Values.hostPathsExporter.watchDirectories $dsDef.watchDirectories }}
      - name: dir-{{ . | clean | sha1sum }}
        hostPath:
          path: {{ . | clean }}
          {{- if $hostPathType }}
          type: {{ $hostPathType | quote }}
          {{- end }}
      {{- end }}
      {{- range default $.Values.hostPathsExporter.watchFiles $dsDef.watchFiles }}
      - name: file-{{ . | clean | sha1sum }}
        hostPath:
          path: {{ . | clean | dir }}
          {{- if $hostPathType }}
          type: {{ $hostPathType | quote }}
          {{- end }}
      {{- end }}
      {{- range default $.Values.hostPathsExporter.watchKubeconfFiles $dsDef.watchKubeconfFiles }}
      - name: kube-{{ . | clean | sha1sum }}
        hostPath:
          path: {{ . | clean | dir }}
          {{- if $hostPathType }}
          type: {{ $hostPathType | quote }}
          {{- end }}
      {{- end }}
      {{- if or $.Values.webConfiguration $.Values.webConfigurationExistingSecret }}
      - name: web-configuration
        secret:
          secretName: "{{ default (include "x509-certificate-exporter.webConfigurationSecretName" $) $.Values.webConfigurationExistingSecret }}"
          items:
          - key: webconfig.yaml
            path: webconfig.yaml
      {{- end }}
      {{- range $extraVolumes }}
      - {{ tpl (. | toYaml) $ | indent 8 | trim }}
      {{- end }}
{{- end }}
{{- end }}
