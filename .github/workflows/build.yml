name: Build
on:
  release:
    types: [created]

concurrency: 
  group: release-${{ github.event.release.id }}
  cancel-in-progress: true

env:
  BUILD_VERSION: ${{ github.ref_name }}
  BUILD_COMMIT: ${{ github.sha }}

jobs:
  oci:
    name: Container Images
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Compute shortened commit hash
        uses: benjlevesque/short-sha@v1.2
        id: short-sha
        with:
          length: 6

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: arm64,riscv64

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
        with:
          install: true
          config-inline: |
            [registry."docker.io"]
              mirrors = ["mirror.gcr.io"]

      - name: Inspect builder
        run: |
          echo "Name:      ${{ steps.buildx.outputs.name }}"
          echo "Endpoint:  ${{ steps.buildx.outputs.endpoint }}"
          echo "Status:    ${{ steps.buildx.outputs.status }}"
          echo "Flags:     ${{ steps.buildx.outputs.flags }}"
          echo "Platforms: ${{ steps.buildx.outputs.platforms }}"

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to Quay.io
        uses: docker/login-action@v2
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_ROBOT_TOKEN }}

      - name: Build and push to registries
        #  --platform linux/amd64,linux/arm64 \
        run: |
          docker build \
            --platform linux/amd64 \
            --build-arg "VERSION=${{ env.BUILD_VERSION }}" \
            --build-arg "VCS_REF=${{ env.BUILD_COMMIT }}" \
            --build-arg "BUILD_DATE=$(date --utc --iso-8601=seconds)" \
            --tag enix/x509-certificate-exporter:test \
            --tag quay.io/enix/x509-certificate-exporter:test \
            --push \
            .

  binary:
    name: Binary
    permissions:
      contents: write
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      max-parallel: 4
      matrix:
        goos: [linux]
        goarch: [amd64]
        #goos: [linux, darwin, freebsd, illumos, netbsd, openbsd, solaris, windows]
        #goarch: [amd64, arm64, riscv64, "386"]
        #exclude:
        #  - goos: darwin
        #    goarch: riscv64
        #  - goos: darwin
        #    goarch: "386"
        #  - goos: freebsd
        #    goarch: riscv64
        #  - goos: illumos
        #    goarch: arm64
        #  - goos: illumos
        #    goarch: riscv64
        #  - goos: illumos
        #    goarch: "386"
        #  - goos: netbsd
        #    goarch: riscv64
        #  - goos: openbsd
        #    goarch: riscv64
        #  - goos: solaris
        #    goarch: arm64
        #  - goos: solaris
        #    goarch: riscv64
        #  - goos: solaris
        #    goarch: "386"
        #  - goos: windows
        #    goarch: riscv64
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set build parameters
        id: vars
        run: |
          echo ::set-output name=buildtime::$(date --utc --iso-8601=seconds)

      - name: Build and upload to Github release
        # TODO not a very good action, make our own script
        uses: wangyoucao577/go-release-action@v1.31
        with:
          # draft releases are only found by name
          release_name: ${{ github.event.release.name }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          goversion: "1.18.6"
          goos: ${{ matrix.goos }}
          goarch: ${{ matrix.goarch }}
          build_flags: >-
            -tags netgo,osusergo
          ldflags: >-
            -X "github.com/enix/x509-certificate-exporter/v3/internal.Version=${{ env.BUILD_VERSION }}"
            -X "github.com/enix/x509-certificate-exporter/v3/internal.CommitHash=${{ env.BUILD_COMMIT }}"
            -X "github.com/enix/x509-certificate-exporter/v3/internal.BuildDateTime=${{ steps.vars.outputs.buildtime }}"
          project_path: ./cmd/x509-certificate-exporter
          binary_name: x509-certificate-exporter
          asset_name: x509-certificate-exporter-${{ matrix.goos }}-${{ matrix.goarch }}
          compress_assets: true
          md5sum: false
          sha256sum: true
          retry: 5

  publish:
    name: Publish
    needs:
      - oci
      - binary
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - name: Publish the drafted Github release
        if: ${{ github.event.release.draft }}
        uses: irongut/EditRelease@v1.2.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          id: ${{ github.event.release.id }}
          #draft: false
          body: "would have been published now"
